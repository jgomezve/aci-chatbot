# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Tests
on:
  - push

env:
  REGISTRY: docker.io

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2.1.5
        with:
          go-version: '1.15'
        id: go

      - name: Go Format
        run: |
          make fmt

      - name: Unit Test
        run: |
          make test

      - name: Unit Test
        run: |
          echo ${{ github.actor }}

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: jgomezve
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: jgomezve/aci-chatbot:latest
  
      - name: Webex Notification
        if: always()
        uses: qsnyder/action-wxt@master
        env:
          TOKEN: ${{ secrets.WEBEX_TOKEN }}
          ROOMID: ${{ secrets.WEBEX_ROOM_ID }}
          MESSAGE: |
            [**[${{ job.status }}] ${{ github.repository }} #${{ github.run_number }}**](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            * Commit: [${{ github.event.head_commit.message }}](${{ github.event.head_commit.url }})[${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})
            * Author: ${{ github.event.sender.login }}
            * Branch: ${{ github.ref }} ${{ github.head_ref }}
            * Event: ${{ github.event_name }}
